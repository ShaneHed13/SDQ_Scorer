<!DOCTYPE html>
<html lang="en">

<head>
  <title>DB Info</title>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="/styles/styles.css">
</head>

<body>
  <div id="wrapper">
    <div class="center">
      <img src="/images/header.jpg" alt="header">
    </div>
    <div id="pageNav">
      <nav>
        <a href="/logout">Logout</a>
        <a class="noprint" href="/home">Return to Homepage</a>
        <a href="student-records">Individual Student Records</a>
        <a href="db-info">All SDQ Records</a>
      </nav>
    </div>
    <h1>Score the Strength and Difficulties Questionnaire</h1>
    <div id="input">

      <select onchange="changeTest(); ageCheck();">
        <option value='sdq410pt'>4-10 Parent/Teacher Single Page</option>
        <option value='sdq1117pt'>11-17 Parent/Teacher Single Page</option>
        <option value='sdq1117s'>11-17 Self Single Page</option>
      </select>

      <br><br><br>

      <label>Completed By: </label><input id="completedBy" type="text">

      <label>Completion Date: </label><input id="dateCompleted" type="date">

      <p id="email" hidden>
        <%= email %>
      </p>

      <label>Child's Name: </label><input id="name" type="text">
      <label>Date of Birth: </label><input id="dob" type="date"
        onfocusout="ageCheck();"><label for="DOBvalidation" id="DOBvalidation"
        style="font-weight: bold;"></label>
    </div>
    <script>

      function ageCheck() {

        const userDOB = new Date(document.getElementById('dob').value);
        const today = new Date();
        const select = document.querySelector("select");
        const selectedChoice = select.value;

        const msDiff = today - userDOB;
        const age = Math.floor(msDiff / (365.25 * 24 * 60 * 60 * 1000))

        console.log(age)

        DOBvalidation.innerHTML = "";

        if (age > 17 || age < 4) {

          DOBvalidation.innerHTML = "  SDQ not rated for this age"

        } else if (age > 10 && age < 18 && select.value == "sdq410pt") {

          DOBvalidation.innerHTML = "  Please Select an 11-17 test"

        } else if (age > 3 && age < 11 && select.value == "sdq1117pt") {

          DOBvalidation.innerHTML = "  Please Select the 4-10 test"

        } else if (age > 3 && age < 11 && select.value == "sdq1117s") {

          DOBvalidation.innerHTML = "  Please Select the 4-10 test"

        }
      };

      function changeTest() {
        const select = document.querySelector("select");
        const selectedChoice = select.value;

        document.querySelectorAll(".a").forEach(el => {
          el.style.display = selectedChoice == "sdq410pt" ? 'inline-block' : 'none';
        });
        document.querySelectorAll(".b").forEach(el => {
          el.style.display = selectedChoice == "sdq1117pt" ? 'inline-block' : 'none';
        });
        document.querySelectorAll(".c").forEach(el => {
          el.style.display = selectedChoice == "sdq1117s" ? 'inline-block' : 'none';
        });

      }

      function changeIS() {
        const selectIS = document.getElementById("isChange");
        const selectedIS = selectIS.value;

        console.log(selectedIS);

        document.querySelectorAll(".IS, .pIS, .tIS, .sIS").forEach(el => {
          el.style.display = selectedIS == "no" ? 'none' : 'inline-block';
        });

        document.querySelectorAll(".pIS").forEach(el => {
          el.style.display = selectedIS == "pIS" ? 'inline-block' : 'none';
        });
        document.querySelectorAll(".tIS").forEach(el => {
          el.style.display = selectedIS == "tIS" ? 'inline-block' : 'none';
        });
        document.querySelectorAll(".sIS").forEach(el => {
          el.style.display = selectedIS == "sIS" ? 'inline-block' : 'none';
        });
        
        // Hide the questions that contain N/A
        if (selectedIS == "tIS") {
          document.querySelectorAll(".question4").forEach(el2 => {
            el2.style.display = 'none'
          })
          document.querySelectorAll(".question5").forEach(el2 => {
            el2.style.display = 'none'
          })
        } else {
          document.querySelectorAll(".question4").forEach(el2 => {
            el2.style.display = 'revert'
          })
          document.querySelectorAll(".question5").forEach(el2 => {
            el2.style.display = 'revert'
          })
        }
      }

    </script>

    <br><br>
    <div class="qTable">
      <table>
        <tr>
          <th>Num.</th>
          <th>Question</th>
          <th>Not True</th>
          <th>Somewhat True</th>
          <th>Always True</th>
        </tr>

        <% testQuestions.forEach(function(r) { %>

          <tr>
            <td>
              <%= r.id %>
            </td>
            <td style="text-align: left;">
              <div class="a" style="display:inline-block;">
                <%= r.sdq410pt %>
              </div>
              <div class="b" style="display:none;">
                <%= r.sdq1117pt %>
              </div>
              <div class="c" style="display:none;">
                <%= r.sdq1117s %>
              </div>
            </td>
            <td style="text-align:center;"><input type="radio"
                name="<%= r.id %>" value="never">

            </td>
            <td style="text-align:center;"><input type="radio"
                name="<%= r.id %>" value="sometimes">

            </td>
            <td style="text-align:center;"><input type="radio"
                name="<%= r.id %>" value="always">

            </td>
          </tr>
          <% }); %>

      </table>
    </div>
    <br><br>

    <select id="isChange" onchange="changeIS();">
      <option value='no'>No Impact Supplement</option>
      <option value='pIS'>Parent Impact Supplement</option>
      <option value='tIS'>Teacher Impact Supplement</option>
      <option value='sIS'>Self Impact Supplement</option>
    </select>

    <br><br>

    <table class="IS qTable" style="display:none;">
      <tr>
        <th>Question</th>
        <th>Not At All</th>
        <th>Only A Little</th>
        <th>A Medium Amount</th>
        <th>A Great Deal</th>
      </tr>

      <% impactQuestions.forEach(function(r) { %>

        <tr class="question<%= r.id %>">
          <td>
            <div class="pIS" style="display:none;">
              <%= r.parent %>
            </div>
            <div class="tIS" style="display:none;">
              <%= r.teacher %>
            </div>
            <div class="sIS" style="display:none;">
              <%= r.self %>
            </div>
          </td>
          <td><input type="radio" name="i<%= r.id %>" value="notAtAll">
            <%= r.never %>
          </td>
          <td><input type="radio" name="i<%= r.id %>" value="aLittle">
            <%= r.never %>
          </td>
          <td><input type="radio" name="i<%= r.id %>" value="mediumAmt">
            <%= r.sometimes %>
          </td>
          <td><input type="radio" name="i<%= r.id %>" value="greatDeal">
            <%= r.always %>
          </td>
        </tr>
        <% }); %>
    </table>


    <br>
    <table id="completeTable">
      <tr>
        <td id="complete" style="font-size: 20px;font-weight: bold;">Please
          Select Who Completed this Form:</td>
      </tr>
      <tr>
        <td><input id="parent" type="radio" name="cb">Parent</td>
      </tr>
      <tr>
        <td><input id="teacher" type="radio" name="cb">Teacher</td>
      </tr>
      <tr>
        <td><input id="self" type="radio" name="cb">Self</td>
      </tr>

    </table>

    <br>

    <button id="subButton" type="submit"
      onclick="logTask()">Submit</button>&nbsp;&nbsp;&nbsp;<label
      for="validation" id="validation" style="font-weight: bold;"></label>
  </div>
  <script>
    let currentTaskID = null;

    // Loops through the test and pulls the selected answers. Said answers are assigned point values, and the scores are calculated from there.
    const logTask = async function () {

      let count = 0;
      let impactCount = 0;
      let qArray = [];
      let iArray = [];
      let selectedValue = "";
      let impactValue = "";
      let validation = document.getElementById("validation");

      //Getting values for date reference
      let currentDate = new Date();
      let day = currentDate.getDate();
      let month = currentDate.getMonth() + 1;
      let year = currentDate.getFullYear();

      if (day < 10) {
        day = '0' + day;
      } else if (month < 10) {
        month = '0' + month;
      }

      currentDate = year + "-" + month + "-" + day;
      while (count < 26) {

        //getting reference to all radio buttons with the value of count
        const radioBtns = document.querySelectorAll('input[name="' + count + '"]');

        //checking what button  is checked in the current group
        for (const radioBtn of radioBtns) {
          if (radioBtn.checked) {
            selectedValue = radioBtn.value;
            qArray.push(selectedValue);
            break;
          }
        }

        count++;
      } // end while loop

      //Testing 
      //alert(qArray.toString());

      while (impactCount < 7) {
        const impactBtns = document.querySelectorAll('input[name="i' + impactCount + '"]');

        for (const impactBtn of impactBtns) {

          if (impactBtn.checked) {
            impactValue = impactBtn.value;
            iArray.push(impactValue);
            break;
          }
        }

        impactCount++;
      }

      //Assigning values
      let val = 0;
      let aArray = [];
      // Impact values
      let iVal = 0;
      let iaArray = [];

      while (val < 26) {

        //Checking for questions with values calculated differently
        if (val == 6 || val == 10 || val == 13 || val == 20 || val == 24) {
          switch (qArray[val]) {
            case 'never':
              aArray.push(2)
              break;
            case 'sometimes':
              aArray.push(1)
              break;
            case 'always':
              aArray.push(0)
              break;
            case 'none':
              aArray.push(0)
              break;
            default:
              break;
          }
          //Assigning every other questions value
        } else {
          switch (qArray[val]) {
            case 'never':
              aArray.push(0)
              break;
            case 'sometimes':
              aArray.push(1)
              break;
            case 'always':
              aArray.push(2)
              break;
            case 'none':
              aArray.push(0)
              break;
            default:
              break;
          }
        }

        val++;

      } //end while loop

      // Impact question loop
      while (iVal < 7) {

        switch (iArray[iVal]) {
          case 'notAtAll':
            iaArray.push(0)
            break;
          case 'aLittle':
            iaArray.push(0)
            break;
          case 'mediumAmt':
            iaArray.push(1)
            break;
          case 'greatDeal':
            iaArray.push(2)
            break;
          default:
            break;
        }

        iVal++;

      }

      // Getting values from text and date boxes
      let expires = new Date();
      expires = document.getElementById('dateCompleted').value;
      let child = document.getElementById('name').value;
      let birthDate = new Date();
      birthDate = document.getElementById('dob').value;
      let compBy = document.getElementById('completedBy').value;
      let scoredBy = document.getElementById('email').value;
      var role = "";

      if (document.getElementById('teacher').checked == true) {
        role = "Teacher";
      } else if (document.getElementById('parent').checked == true) {
        role = "Parent";
      } else if (document.getElementById('self').checked == true) {
        role = "Self";
      }

      if (aArray[0] == undefined || aArray[1] == undefined || aArray[2] == undefined || aArray[3] == undefined || aArray[4] == undefined || aArray[5] == undefined || aArray[6] == undefined || aArray[7] == undefined || aArray[8] == undefined || aArray[9] == undefined || aArray[10] == undefined ||
        aArray[11] == undefined || aArray[12] == undefined || aArray[13] == undefined || aArray[14] == undefined || aArray[15] == undefined || aArray[16] == undefined || aArray[17] == undefined || aArray[18] == undefined || aArray[19] == undefined || aArray[20] == undefined ||
        aArray[21] == undefined || aArray[22] == undefined || aArray[23] == undefined || aArray[24] == undefined) {

        validation.innerHTML = "Please select a response for each question on the assessment.";

      } else if (child == "") {
        validation.innerHTML = "Please enter a child's name.";
      } else if (birthDate == "" || Date.parse(birthDate) > Date.parse(currentDate)) {
        validation.innerHTML = "Please enter a valid birthday for the child.";
      } else if (role == "") {
        validation.innerHTML = "Please select a role for the individual completing the test.";
      } else if (DOBvalidation.innerHTML != "") {
        validation.innerHTML = "Please ensure the test chosen matches the clients age.";

      } else {
        let q1;
        let q2;
        let q3;
        let q4;
        let q5;
        let q6;
        let q7;
        let q8;
        let q9;
        let q10;
        let q11;
        let q12;
        let q13;
        let q14;
        let q15;
        let q16;
        let q17;
        let q18;
        let q19;
        let q20;
        let q21;
        let q22;
        let q23;
        let q24;
        let q25;
        let i1;
        let i2;
        let i3;
        let i4;
        let i5;
        let i6;

        [q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20, q21, q22, q23, q24, q25] = aArray;

        [i1, i2, i3, i4, i5, i6] = iaArray;


        //Assign actual scores
        const selectIS = document.getElementById("isChange");
        const selectedIS = selectIS.value;

        let epScore = q3 + q8 + q13 + q16 + q24;
        let cpScore = q5 + q7 + q12 + q18 + q22;
        let haScore = q2 + q10 + q15 + q21 + q25;
        let ppScore = q6 + q11 + q14 + q19 + q23;
        let prScore = q1 + q4 + q9 + q17 + q20;
        let tdScore = epScore + cpScore + haScore + ppScore;
        let iScore;
        if (selectedIS == "pIS" || selectedIS == "sIS") {
          iScore = i1 + i2 + i3 + i4 + i5 + i6;
        } else if (selectedIS == "tIS") {
          iScore = i1 + i2 + i3 + 0 + 0 + i6;
        } else {
          iScore = "N/A";
        }


        // Sending successful test results to a Results page for scoring
        const response = await fetch('/results', {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },

          body: JSON.stringify({
            child: child,
            dob: birthDate,
            total: tdScore,
            emotional: epScore,
            conduct: cpScore,
            hyperactivity: haScore,
            peer: ppScore,
            prosocial: prScore,
            impact: iScore,
            completed: compBy,
            scored: scoredBy,
            role: role,
            expires: expires
          })

        });


        const result = await response.json();
        console.log(result.scoredBy);

        window.location.href = "results";

      }


      // Posts test results to the db
      /* const response = await fetch('/log', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },

        body: JSON.stringify({
          child: child,
          dob: birthDate,
          total: tdScore,
          emotional: epScore,
          conduct: cpScore,
          hyperactivity: haScore,
          peer: ppScore,
          prosocial: prScore,
          impact: 10,
          completed: compBy,
          role: "Teacher",
          expires: expires
        })

      }); */



    };

  </script>


</body>

</html>